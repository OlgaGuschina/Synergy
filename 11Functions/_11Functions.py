#Задание No1
#●Создайте функцию, которая принимает в качестве параметра -натуральное целое число.
#●Данная функция находит факториал полученного числа. Например, факториал числа 3 это число 6.
#●Теперь создайте список факториалов чисел от получившегося ранее факториала 6, до 1.
#В итоге, на вход программа получает например число 3, возвращает число 6(факториал числа 3) и вам нужно сделать список из факториалов числа 6
#в убывающем порядке. Находим факториал числа 6-это 720, затем от числа 5-это 120и так далее вплоть до 1То есть, 
#результирующий список будет выглядеть в нашем примере так: [720, 120, 24, 6, 2, 1]
'''
def factorial(n):
    F = 1
    for i in range(2,n+1):
        F = F*i
    return F

n = int(input("Введи число N, я посчитаю его факториал! "))
print(f"N! = {factorial(n)}")
my_list = []
for i in range(n, 0, -1):
    my_list.append(factorial(i))
print(my_list)    
'''

#Задание No2
#В Урок No10. Задание No1вы создавали словарь с информацией о питомце. Теперь нам нужна "настоящая" база данных для ветеринарной клиники.
#Подробный требуемый функционал будет ниже. Пока что справка:
#●Создайте функцию create
#●Создайте функцию read
#●Создайте функцию update
#●Создайте функцию delete
#●Используйте словарь pets, который будет предоставлен ниже, либо создайте свой аналогичный
#Функция create:Данная функция будет создавать новую запись с информацией о питомце и добавлять эту информацию в наш словарь pets
#Функция read: Данная функция будет отображать информацию о запрашиваемом питомце в виде: 
#Это желторотый питон по кличке "Каа". Возраст питомца: 19 лет. Имя владельца: Саша
#Функция update: Данная функция будет обновлять информацию об указанном питомце
#Функция delete: Данная функция будет удалять запись о существующем питомце
#Структруа результирующего словаря pets будет как и в Урок No10. Задание No1, но с небольшим видоизменением: 
#Словарь petspets = {1:{"Мухтар": {"Вид питомца": "Собака","Возраст питомца": 9,"Имя владельца": "Павел"},},
#                    2:{"Каа": {"Вид питомца": "желторотый питон","Возраст питомца": 19,"Имя владельца": "Саша"},},# и так далее}
#Здесь, 1 и 2 -это идентификаторы наших питомцев. Это уникальные ключи, по которым мы сможем обращаться к нашим записям в "базе данных"
#Суть будущей программы будет заключаться в следующем:
#●Программа будет работать с помощью цикла while с условием command!= 'stop', то есть до тех пор, пока на предложение ввести команду, 
#пользователь не введёт слово stop

petspets = {}

def get_data():
    data = []
    data.append(input("Как зовут вашего питомца? "))
    data.append(input("Кто ваш питомец? "))
    data.append(int(input("Сколько ему лет? ")))
    data.append(input("Ваше имя? "))
    return data

def set_data(data, the_pet):
    name = data[0]
    the_pet[name] = {}
    the_pet[name]["Вид питомца"] = data[1]
    the_pet[name]["Возраст питомца"] = data[2]
    the_pet[name]["Имя владельца"] = data[3]

def create():
    data = get_data()
    the_pet = {}
    petspets[len(petspets)] = the_pet
    set_data(data, the_pet)
    
def update(index):
    data = get_data()
    the_pet = petspets[index]
    name = list(the_pet.keys())[0]
    if name != data[0]:
        del the_pet[name]
    set_data(data, the_pet) 
    
def delete(index):
    petspets.pop(index, None)

def read(index):
    if index >= len(petspets):
        print("Нет записи с таким ключом")
        return
    name = list(petspets[index].keys())[0]
    age = petspets[index][name]["Возраст питомца"]
    rem = age % 10
    if age >=5 and age <=20:
        age_end = "лет."
    elif rem == 1:
        age_end = "год."
    elif rem >=2 and rem <=4:
        age_end = "года."
    print("Это {Вид питомца} по кличке {0}. Возраст: {Возраст питомца} {1} Имя владельца: {Имя владельца}.".format(name, age_end, **petspets[index][name]))
    
cmd = ""
while cmd != "stop":
    cmd = input("petspets>>")
    if cmd == "create":
        create()
    elif cmd == "read":
        index = int(input("Введите индекс: "))
        read(index)
    elif cmd == "update":
        index = int(input("Введите индекс: "))
        update(index)
    elif cmd == "delete":
        index = int(input("Введите индекс: "))
        delete(index)
    elif cmd != "stop":
        print("Неизвестная команда: ", cmd)

